package com.stream;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

public class Stream_13 {
	public static void main(String[] args) {
		Trader t1=	new Trader("shyam","mumbai");
		Trader t2=	new Trader("rahul","delhi");
		Trader t3=	new Trader("yogesh","ahmdabad");
		Trader t4=	new Trader("ravi","mumbai");
		Trader t5=	new Trader("pratik","ahmdabad");
				
			
	
	List<Transaction> tr=Arrays.asList(
			new Transaction(t1,2011,90000),
			new Transaction(t2,2011,50000),
			new Transaction(t3,2015,18000),
			new Transaction(t4,2011,45000),
			new Transaction(t5,2014,60000)
			);
		
	        System.out.println("Question 8");

			List<Transaction> t=	tr.stream().filter(n->n.getYear()==2011).sorted((a,b)->a.getValue()-b.getValue()).collect(Collectors.toList());
			System.out.println(t);
		    System.out.println("_________________________________________________________");
	
			System.out.println("Question 13");
	       tr.stream().filter(x->x.trader.city.contains("delhi")).map(n->n.value)
	       .forEach(System.out::println);
	       
	       System.out.println("_________________________________________________________");
	       System.out.println("Question 14");
	       
	       Optional<Integer> max=tr.stream().map(n->n.value).max((a,b)->a.compareTo(b));
	       System.out.println(max);
	       
	       System.out.println("_________________________________________________________");
	       System.out.println("Question 15");
	       
	       Optional<Integer> min=tr.stream().map(n->n.value).min((a,b)->a.compareTo(b));
	       System.out.println(min);
	}

}
